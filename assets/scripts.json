{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"},{"name":"Utils","src":"http://192.168.1.157:9000/Utils.js"},{"name":"smtp","src":"https://smtpjs.com/v3/smtp.js"},{"name":"moment-min","src":"https://momentjs.com/downloads/moment-with-locales.min.js"},{"name":"bootstrap-min","src":"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"},{"name":"GoogleApi","src":"https://apis.google.com/js/api.js"},{"name":"html2canvas","src":"https://html2canvas.hertzen.com/dist/html2canvas.js"},{"name":"flagsBrave","src":"brave://flags/flags.js"}],"settings":{"badgeCounter":true,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/dreamweaver","useSoftTabs":false,"useWorker":true,"wrap":true},"supportBtn":false,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":"","css":"/*\nPour chaque instance, dynamiquement cr├®er (\"instance+chiffre incr├®ment├®\")\nil faut reouvrir la page X\ncliquer sur le bouton login \nr├®cup├®rer le compteur\nse d├®connecter\n*/\n\n/* \npassword csv col = 15 +10 pour la prochaine\nbtc address = 16\t\n*/","id":"https://freebitco.in/?op=signup_page,https://wp-themes.com/twentytwenty","js":"var urlRef = \"https://freebitco.in\";\r\n//var refParrain = \"?r=38415160\";\r\nvar user = \"compte1_65c7@caramail.com\";\r\nvar pass = \"RRLKxCK2ENzEuOj3\";\r\nvar instances = 4;\r\nvar auths = [];\r\n\r\nfunction LoadLogins() {\r\n\t\r\n\t\tif (window.debugger != null){\r\n\t    \tsessionStorage.auths = \"[]\";\r\n    \tsessionStorage.counters = '[{\"minutes\":\"53\",\"seconds\":\"28\"}]';\r\n\t\t}\r\n    const p = new Promise((resolve,reject)=>\r\n    {\r\n    \t//We need to create inspector cause we finished to get all counters\r\n    \tif (sessionStorage.auths == \"[]\") {\r\n    \t//So we clean body ;)\r\n    \tInjectCss(\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\");\r\n    \t$(\"body\").children().remove();\r\n    \t$(\"body\").attr(\"style\",\"\");\r\n    \t//and we start to create our inspector simply\r\n    \t\r\n    \t//iterate on each counter\r\n    \tfor(var i in sessionStorage.counters)\r\n    \t{\r\n    \t\tj = i+1;\r\n    \t\tvar instanceName = 'instance_'+ j;\r\n    \t\tvar counters = JSON.parse(sessionStorage.counters);\r\n    \t\tvar {minutes,seconds} = counters[i];\r\n    \t\t//var duration = +counters.shift().minutes * 60 + +counters.shift().seconds;\r\n    \t\tvar duration = moment.duration(\"00:\" + minutes + \":\" + seconds).asSeconds();\r\n    \t\t$(\"<a href='#'><span class='badge' id='\"+ instanceName + \"'></span></a>\").appendTo(\"body\");\r\n    \t\t//we create countdown for this && we display\r\n    \t\tCountDown('#' + instanceName,duration);\r\n    \t}\r\n    \t}\r\n    \t\r\n    \t// Have you some auths to test already?\r\n    \tif (sessionStorage.auths == null){\r\n        var values = sheetAsJson(\"https://spreadsheets.google.com/feeds/cells/1BvbccqgHuG6-XJ9KIJIoD_sE9gAKA9iZ3XXonvd1VCg/5/public/full?alt=json\", \"password\");\r\n\t\t}\r\n\t\telse\r\n\t\t\tauths = JSON.parse(sessionStorage.auths);\r\n\t\t\r\n        window.setTimeout(function() {\r\n            // On tient la promesse !\r\n            resolve(values);\r\n        }, Math.random() * 2000 + 1000);\r\n    }\r\n    );\r\n    p.then((val)=>{\r\n        for (var j = 0; j < values.length; j++) {\r\n            var i = j + 1;\r\n            pass = values[j];\r\n            login = \"instance-\" + i + \"@gmx.fr\";\r\n            auths.push({\r\n                \"login\": login,\r\n                \"pass\": pass\r\n            });\r\n        }\r\n        return auths;\r\n    }\r\n    )\r\n    .then(()=>{\r\n    \t\t//For the first passage, we don't need wait 5min!\r\n    \t\tvar delay = auths[0].login == (\"instance-1@gmx.fr\") ? 1 : 60 * 1000;//5 * 60 * 1000;\r\n    \t\tvar {login,pass} = auths[0];//.shift();\r\n            var timeout = window.setTimeout(()=>auth(login, pass), 1);\r\n            sessionStorage.auths = JSON.stringify(auths);\r\n            //console.log(timeout);\t\r\n    }\r\n    )\r\n    .catch((err)=>console.log(\"erreur\"));\r\n\r\n}\r\n\r\nconsole.log(\"oui\");\r\nredirect();\r\n\r\nvar dbg = !true;\r\n\r\nwindow.onload = ()=>{\r\n    while (typeof ($) === 'undefined') {\r\n        setInterval(isJqueryLoaded, 1)\r\n    }\r\n\r\n    if (window.debugger != null)\r\n    {\r\n        debugger ;\r\n    }    \r\n\t        \r\n    $(\"#login_button\").click()\r\n    {\r\n    \tif (localStorage.user == null && localStorage.pass == null)\r\n    \t{\r\n    \t\tlocalStorage.user=$(\"#login_form_btc_address\").val();\r\n    \t\tlocalStorage.pass=$(\"#login_form_password\").val();\r\n    \t}\r\n    }\r\n    /*    \r\n    const Load = new Promise((resolve,reject)=>{\r\n        var auths = LoadLogins();\r\n\r\n        window.setTimeout(resolve(auths), Math.random() * 2000 + 1000);\r\n    })\r\n    */\r\n\t\r\n\t\r\n    \r\n\t$(\".login_menu_button\").click();\r\n\tvar timer = setInterval(function() {\r\n\t\t    if(IsHidden()) {\r\n\t\t        clearInterval(timer); \r\n\t\t        isFinished = true;\r\n\t\t        if (localStorage.user != null && localStorage.pass != null)\r\n\t\t        {\r\n\t\t        \tauth(localStorage.user,localStorage.pass);\r\n\t\t        }\r\n\t\t    }\r\n\t\t}, 100);\r\n}\r\n\r\nfunction IsHidden() {\r\n    if ($(\"#signup_form\").is(\":hidden\"))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nfunction auth(user, pass) {\r\n\tClearCookie();\r\n    console.log(\"Try to log in with \", user, pass);\r\n    //return {login,pass};\r\n    $(\"#login_form_btc_address\").val(user);\r\n    $(\"#login_form_password\").val(pass);\r\n    $(\"#login_button\").click();\r\n}\r\n\r\nfunction redirect() {\r\n    if (window.location.href.startsWith(\"https://wp-themes.com/twentytwenty\")) {\r\n        window.askCounter = 1;\r\n        window.location.href = urlRef;\r\n    }\r\n}\r\n","libs":["jQuery 3","moment-min","bootstrap-min"],"name":"CounterInspecteur","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"","css":"","id":"https://trader.degiro.nl/","js":"var getProperties = (i,e) => {\r\n    var item = {};\r\n    $(e).find(\"td\").each((j,t) => {        \r\n        for(var p in $(t).find(\"span\")){\r\n            console.log(p);\r\n            break;\r\n        }\r\n    }\r\n)}\r\n\r\n\r\nvar conditions = () => typeof(jQuery) === 'undefined' && $(\"div[data-name='positions'] table\").length > 0;\r\n\r\nvar dbg = !true;\r\nfunction isJqueryLoaded()\r\n{\r\n\treturn jQuery !== null;\r\n}\r\n\r\nwindow.onload = \r\n() => \r\n{\r\n\twhile(!conditions())\r\n\t{\r\n\t\tsetInterval(isJqueryLoaded,1)\t\r\n\t}\r\n\r\nconsole.log(tableToJson($(\"div[data-name='positions'] table\").get(0)));\r\n\r\n};\r\n\r\n\r\nfunction tableToJson(table) {\r\n    var data = [];\r\n\r\n    // first row needs to be headers\r\n    var headers = [];\r\n    for (var i=0; i<table.rows[0].cells.length; i++) {\r\n        headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi,'');\r\n    }\r\n\r\n    // go through cells\r\n    for (var i=1; i<table.rows.length; i++) {\r\n\r\n        var tableRow = table.rows[i];\r\n        var rowData = {};\r\n\r\n        for (var j=0; j<tableRow.cells.length; j++) {\r\n\r\n            rowData[ headers[j] ] = tableRow.cells[j].innerHTML;\r\n\r\n        }\r\n\r\n        data.push(rowData);\r\n    }       \r\n\r\n    return data;\r\n}\r\n\r\n\r\n","libs":["jQuery 3"],"name":"DegiroAsJson","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"","css":"/*\nsi l'url contient https://freebitco.in/?op=home\nalors dans ce cas la il faut r├®cup├®rer le compteur et se d├®connecter\n*/\n\n/*\n<div id=\"time_remaining\" class=\"hasCountdown\"><span class=\"countdown_row countdown_show2\"><span class=\"countdown_section\"><span class=\"countdown_amount\">28</span><br>Minutes</span><span class=\"countdown_section\"><span class=\"countdown_amount\">52</span><br>Seconds</span></span></div>\n*/\n\n/* \ndocument.title\nsetInterval(() => console.log(document.title),1000)\n$(\"#time_remaining .countdown_amount\").eq(1).text() \n\n\n\nChaque session doit envoyer son propre compteur\nquand diff <= 0 , faire clignoter le compteur en rouge\nun click dessus nous envoie sur la page d'auth ave c le login et le mot de passe correspondant\net se connecte, on a plus qu'a roll, a la fin du roll, on envoie le compteur\n\nTODO:\n- faire un tableau bonus - points afin de d├®terminer la meilleure solution, sachant que les RP est prioritaire, vient ensuite les free btc, pour finir les lotteries\n\n- Comment d'un click sur une commande charger une vm ?\n\n*/\n\n\n","id":"https://freebitco.in/?op=compteur","js":"var seconds = \"\";\nvar minutes = \"\";\ncounters = [];\nfunction logout()\n{\n\t$(\".logout_link\").click();\n\twindow.location.href = \"https://freebitco.in/?op=signup_page\";\n}\n\n\n$(function(){\n\tconsole.log(\"oui\");\n\tvar timer = setInterval(function() {\n\t\t    if(GetText(\"#time_remaining .countdown_amount\").every((e) => e==true)) {\n\t\t        clearInterval(timer); \n\t\t        isFinished = true;\n\t\t        GetCounter();\n\t\t        sessionStorage.counters = JSON.stringify(counters);\n\t\t        \n\t\t        auths = JSON.parse(sessionStorage.auths);\n\t\t        //We kill it because already get information!\n\t\t        auths.shift()\n\t\t        sessionStorage.auths = JSON.stringify(auths);\n\t\t    }\n\t\t}, 100);\n})\n\nfunction GetCounter()\n{\n\tseconds = $(\"#time_remaining .countdown_amount\").eq(1).text();\n\tminutes = $(\"#time_remaining .countdown_amount\").eq(0).text();\n\tcounters.push({minutes,seconds});\n}\n\n\n\t\t\nfunction GetText(selector) {\n    if (window.debugger != null)\n        debugger ;\n    var result = [];\n    if ($(selector).length == 0) {\n        result.push(true);\n    }\n\n    for (var i=0;i<2;i++) {\n        if ($(selector).eq(i).text() == \"\") {\n            result.push(false);\n        } else {\n            result.push(true);\n        }\n    }\n    return result;\n}\n","libs":["jQuery 3"],"name":"Countern","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"","css":"/*\n.container\n{\n\twidth:100% !important;\n\tmax-width: 100% !important;\n}\n\n.game-container__totalright\n{\n\twidth:30%;\n}\n*/","id":"https://betfury.io/dapps/*","js":"\nclass Settings\n{\n\tforbiddenTimeZones = [];\n\triskBet = \"0.00000008\";\n\tdelayGame = 15000;\n\tgame = \"\"\n\tplaying = 0;\n\tconstructor()\n\t{\n\t\tthis.game = new URL(window.location.href).pathname.split('/')[2].toLowerCase();\n\t\tconsole.info(`A new party of ${this.game} started!`);\n\t\tthis.forbiddenTimeZones.push(new TimeZone({\"low\":\"01:00:00\",\"high\":\"05:10:00\"}));\n\t}\n}\n\n\nclass Event\n{\n\trunSelector=\".bd_circle_head img+img\";\n\tplaySelector=\".btn.btn_large.btn_block.btn_red\";\n\tsuccessSelector = \"\";\n\tfailSelector = \"\";\n\t\n\t\n\tconstructor()\n\t{\n\t\tthis.run();\n\t}\n\t\n\trun()\n\t{\n\t\t$(runSelector).click();\n\t\tvar waitForPlayButton=setInterval(() => {\n\t\t\tif(isSelectorVisible(playSelector))\n\t\t\t{\n\t\t\t\tclearInterval(waitForPlayButton);\n\t\t\t\tthis.play();\n\t\t\t}\n\t\t},1000);\n\t}\n\t\n\tplay()\n\t{\n\t\t$(playSelector).click();\n\t}\n}\n\n\nclass Auction\n{\n\tconstructor()\n\t{\n\t\t\n\t}\n\t\n\tinit()\n\t{\n\t}\n\t\n\tplay()\n\t{\n\t\tsettings.forbiddenTimeZones.forEach((e,i) => {\n\t\tif (e.isInInterval(moment(new Date()).format(\"HH:mm:ss\")))\t{\n\t\t\tconsole.error(\"enchère possible\");\n\t\t\tdocument.querySelector(\".auction__body form button\").click();\n\t\t}\n\t});\n\t\t\n\t}\n\t\n\tbet()\n\t{\n\t\tthis.currentBet = document.querySelector(\".auction__body form input\").value;\n\t\tdocument.querySelector(\".auction__body form input\").value = this.currentBet == \"\" ? 1 : ++this.currentBet;\n\t}\n}\n\nclass Party\n{\n\tdeck = [];\n\tplayInterval = 0;\n\tloopGame = !false;\n\tconstructor()\n\t{\n\t\tthis.handleBetClick();\n\t}\n\t\n\ttoggleLoopGame()\n\t{\n\t\tthis.loopGame = !this.loopGame;\n\t\t$(\"#toggleLoop\").css(\"backgroundColor\",this.loopGame ? \"green\" : \"red\");\n\t}\n\t\n\thandleBetClick()\n\t{\n\t\tswitch(settings.game)\n\t\t{\n\t\t\tcase \"hilo\":\n\t\t\t\tlive(\"button.btn.btn_blue.btn_large.btn_block\",\"click\",() =>  {\n\t\t\t\t\tconsole.log(\"hilo bet clicked!\");\n\t\t\t\t\tsetTimeout(() => party.play(),30000)\n\t\t\t\t});\n\t\t\tbreak;\t\n\t\t}\n\t}\n}\n\n\nclass Card\n{\n\tvalue = \"\";\n\tcolor = \"\"\n\t\n\tconstructor(value,color)\n\t{\n\t\tthis.value = value;\n\t\tthis.color = color;\n\t}\n\t\n\tbuild()\n\t{\n\t}\n}\n\n\nclass Hilo extends Party\n{\n\tdeck = [];\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tif (localStorage.deck != \"\" && typeof localStorage.deck !== \"undefined\")\n\t\t{\n\t\t\tthis.deck = JSON.parse(localStorage.deck);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlocalStorage.deck = \"\";\n\t\t}\n\t\tsetInterval(() => this.play(),35000);\n\t}\n\t\n\t\n\tskipCard()\n\t{\n\t\tdocument.querySelector(\".deck__btn-skip\").click();\n\t}\n\t\n\tplay()\n\t{\n\t\t\n\t\tlet testCardAce = () => \n\t\t{\n\t\t\t\twhile(this.getFirstCard().value.toUpperCase() == 'A')\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Yeah baby it's a ace!\");\n\t\t\t\t\t//this.deck[this.deck.length-1].value == 'A'? this.betMax() : this.betMin();\n\t\t\t\t}\n\t\t\t\tthis.skipCard();\n\t\t}\n\t\t\n\t\tsetInterval(() => {if (party.loopGame) testCardAce() },3500);\n\t}\n\t\n\t\n\tbetMin()\n\t{\n\t\t$$(\".amount__left button\")[0].click();\n\t}\n\t\n\tbetMax()\n\t{\n\t\t$$(\".amount__left button\")[1].click();\n\t\t//todo : manage for popup\n\t}\t\n\n\n\tbetHalf()\n\t{\n\t\t$$(\".amount__right button\")[0].click();\n\t}\n\t\n\tbetDouble(){\n\t\t$$(\".amount__right button\")[1].click();\n\t}\n\t\n\tbet()\n\t{\n\t\tthis.learn();\n\t\t$1(\"button.btn.btn_blue.btn_large.btn_block\").click();\n\t}\n\t\n\tgetFirstCard()\n\t{\n\t\tlet cardElt = $$(\".card.isFlipped div.card-inner\")[0];\n\t\tlet value = cardElt.textContent;\n\t\tlet color = cardElt.querySelector(\".card-back\").classList[1].split(\"_\")[1];\n\t\treturn new Card(value,color);\n\t}\n\t\n\t\n\tlearn(c = null)\n\t{\n\t\tlet card = typeof c == 'undefined' ? this.getFirstCard() : c;\n\t\tlet same = JSON.stringify(this.deck[this.deck.length - 1]) == JSON.stringify(card);\n\t\tif (!same){\n\t\t\tthis.deck.push(card);\n\t\t}\n\t\tlocalStorage.deck = JSON.stringify(this.deck);\n\t}\n\t\n\tshow()\n\t{\n\t\tthis.deck.join();\n\t}\n}\n\nclass Mine \n//extends Party\n{\n\tgameInterval = 0;\n\t\n\tinGame = false;\n\titerSeveral = false;\n\tconstructor()\n\t{\t\n\t\tthis.init();\n\t\t//this.playInterval = setTimeout(() => this.play(),Math.floor(Math.random() * (10000)));\t\n\t}\n\t\n\t\n\tplay()\n\t{\n\t\tif(party.loopGame){\n\t\t\tconsole.info(\"Let's play!\");\n\t\t\tdocument.querySelector(\"button.btn.btn_red.btn_large.btn_block\").click();\n\t\t\tsetTimeout(() => this.myBet(),Math.floor(Math.random() * (10000)));\n\t\t}\n\t}\n\t\n\t\n\tinit()\n\t{\n\t\t// 1 seule mine caché\n\t\tdocument.querySelectorAll(\"div.level-btns__inner button\")[1].click();\n\t\tdocument.querySelectorAll(\".amount__btn\")[0].click();\n\t\t/*\n\t\tdocument.querySelectorAll(\".amount__btn\")[3].click();\n\t\tdocument.querySelectorAll(\".amount__btn\")[3].click();\n\t\tdocument.querySelectorAll(\".amount__btn\")[3].click();\n\t\t*/\n\t\t/*\n\t\t$(\".top-buttons\").append(\"<button id='toggleLoop' onclick='party.toggleLoopGame();'>Toggle loop</button>\");\n\t\t*/\n\t\tdocument.querySelector(\"button.btn.btn_red.btn_large.btn_block\").click();\n\t}\n\t\n\tmyBet()\n\t{\n\t\tif (this.inGame) return;\n\t\tdo {\n\t\t\tdocument.querySelector(\"button.btn.btn_yellow.btn_medium\").click();\n\t\t}while(party.loopGame && !$(\"button.btn.btn_yellow.btn_medium\").is(\":disabled\"));\n\t\t\n\t\tsetTimeout(() => this.play(),Math.floor(Math.random() * settings.delayGame));\n\t}\n}\n\nvar settings;\nvar party;\nvar event;\n\nwindow.onload = () => \n{\n\t//party.loopGame = true;\n\n\t\tvar loadGame = setInterval(() => {\n\t\t\tif(document.querySelector(\".page-game\") != null && document.querySelector(\".page-game\").classList.contains(\"loaded\"))\n\t\t\t{\n\t\t\t\tsettings = new Settings();\n\t\t\t\t\n\t\t\t\tclearInterval(loadGame);\n\t\t\t\tif (settings.playing)\n\t\t\t\tevent = new Event();\t\t\n\t\t\t\t{\n\t\t\t\t\tswitch(settings.game)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase \"mines\":\n\t\t\t\t\t\t\tparty = new Mine();\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"hilo\":\n\t\t\t\t\t\t\tparty = new Hilo();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},1000);\n}\n//window.location.href = \"https://betfury.io/dapps/mines\";\n\n\n","libs":[],"name":"BetFuryInject0r","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"","css":"/*\nInSTANCE\n$(\"tr[pan-data-name]\")\n-- cocher instance nom\n$(\"tr[pan-data-name]\").eq(0).find(\"td.p6n-col-checkbox\").click()\n-- démarrage instance\n$(\".p6n-icon-start\").click()\n-- status de l'instance\n$(\"tr[pan-data-name]\").eq(2).find(\".p6n-icon-status\").attr(\"status\")\n-- Nom de l'instance\n$(\"tr[pan-data-name]\").find(\"gce-status-tooltip\").parent().find(\"a\").html()\nRécuperer toutes les instances arretes, chaque random minute\nchaque random minute, on va les démarrer.\n*/","id":"https://console.cloud.google.com/compute/instances?project=lofty-stack-290312*","js":"var intervalRef = 60000;\r\nvar stoppedInstances = [];\r\nconst STOPPED = \"stopped\";\r\nconst RUNNING = \"success\";\r\nconst ACTIONS = {STOP:\"stop\",REBOOT:\"reboot\",START:\"start\"};\r\nvar stuckedInstances = [];\r\nvar timersInstances = [];\r\n//var isJqueryLoaded = () =>  {return jQuery !== null;}\r\n\r\n\r\n\tconsole.log(\"oui\");\r\n/*\t\r\n    while (typeof ($) === 'undefined') {\r\n        setInterval(isJqueryLoaded, 1)\r\n    }\r\n*/\r\n \r\n    var randomInteger = (max) => \r\n\t{\r\n\t\tvar wait = Math.floor(Math.random() * max);\r\n\t\tconsole.log(wait);\r\n\t\treturn wait;\r\n\t}\r\n    \r\n    \r\n    var getInstancesStucked = async () => {\r\n    \tstuckedInstances = [];\r\n    \tstuckedInstances = await sheetAsJson(\"https://spreadsheets.google.com/feeds/cells/1BvbccqgHuG6-XJ9KIJIoD_sE9gAKA9iZ3XXonvd1VCg/4/public/full?alt=json\",\"toReset\",null);\r\n    \treturn stuckedInstances;\r\n    }\r\n    \r\n    var getInstancesStopped = () => {return $(\"tr[pan-data-name]\").find(\".p6n-icon-status[status='stopped']\")};\r\n    \r\n    function getInstanceName(instance) { \r\n    \treturn $(instance).parent().parent().find(\"a\").html();\r\n    }\r\n    \r\n    var getInstanceStatus = (instance) => {\r\n    \treturn $(instance).find(\"gce-status-tooltip\").parent().find(\".p6n-icon-status\").attr(\"status\")\r\n    }\r\n    \r\n    var checkInstanceStatus = (instanceName) => {\r\n    \treturn getInstanceByName(instanceName).parent().find(\".p6n-icon-status\").attr(\"status\");\r\n    }\r\n    \r\n    var getInstanceByName = (instanceName) => {\r\n    \treturn $(\"tr[pan-data-name]\").find(\"gce-status-tooltip\").parent().find(\"a\").filter((i,e) => $(e).html() == instanceName);\r\n    }\r\n    \r\n    var actInstance = (instance,action) => {\r\n    \t//cocher\r\n    \tlet elt = $(instance).closest(\"tr\").find(\"td.p6n-col-checkbox\");\r\n    \t$(elt).click();\r\n    \tconsole.log(\"instance\",instance,\"is checked\");\r\n    \t//act on instance\r\n    \t$(`.p6n-icon-${action}`).click();\r\n    \tconsole.log(action,\"on\tinstance\",getInstanceName(instance),\"done\");\r\n    \t//decocher\r\n    \t$(elt).click();\r\n    }\r\n\r\n    var manageInstancesTimer = setInterval(() => {\r\n    \tstoppedInstances = getInstancesStopped();\r\n    \tgetInstancesStucked().then(\r\n    \t(instances) => {\r\n\t\tstuckedInstances = instances;    \t\t\r\n    \t$(stoppedInstances).each((i,e) => {\r\n    \t\tvar instanceName = getInstanceName(e);\r\n    \t\ttimersInstances[instanceName] = {};\r\n    \t\ttimersInstances[instanceName].interval = setInterval(() => {\r\n    \t\t\tif (!timersInstances[instanceName].started)\r\n    \t\t\t{\r\n    \t\t\t\tactInstance(e,ACTIONS.START);\r\n    \t\t\t\ttimersInstances[instanceName].started = true;\r\n    \t\t\tif (stoppedInstances.length > 0)\r\n    \t\t\t\tstoppedInstances.pop();\r\n    \t\t\t}\r\n    \t\t\tif(checkInstanceStatus(instanceName) == RUNNING)\r\n    \t\t\t{\r\n    \t\t\t\tclearInterval(timersInstances[instanceName]);\r\n    \t\t\t}\r\n    \t\t},100);\r\n    \t})\r\n    \t//bypass second part\r\n    \t//instances = [];\r\n    \t$(stuckedInstances).each((i,e) => {\r\n    \t\t\tif(typeof timersInstances[e] != \"undefined\")\r\n    \t\t\t\treturn;\r\n    \t\t\ttimersInstances[e] = {\"stopped\":false,\"started\":true,\"interval\":0};\r\n    \t\t\t//manageSheetInstance(i,e);\r\n    \t\t})\r\n    \t})\r\n    \t\r\n    \t\r\n    \t\r\n    },randomInteger(intervalRef / 5))\r\n    \r\n    var manageSheetInstance = (i,e) => {\r\n\t\t\ttimersInstances[e].interval = setInterval(() => {\r\n\t\t\tif (!timersInstances[e].stopped)\r\n\t\t\t{\r\n\t\t\t\tactInstance(getInstanceByName(e),ACTIONS.STOP);\r\n\t\t\t\ttimersInstances[e].stopped = true;\r\n\t\t\t\tstuckedInstances = stuckedInstances.reverse();\r\n\t\t\t\tif (stuckedInstances.length > 0)\r\n\t\t\t\t\tstuckedInstances.pop();\r\n\t\t\t}\r\n\t\t\tif(checkInstanceStatus(e) == STOPPED)\r\n\t\t\t{\r\n\t\t\t\tclearInterval(timersInstances[e]);\r\n\t\t\t\tdelete timersInstances[e];\r\n\t\t\t}\r\n\t\t},100);\r\n    }","libs":["jQuery 3","Utils"],"name":"GCPManagement","options":{"altCSS":false,"altJS":true,"autoImportant":false,"on":false}},{"compiledCss":"input {font-family: cursive!important;}","css":"input\n{\n\tfont-family: cursive;\n}","id":"https://2captcha.com/statistics/uploads*","js":"var onlyLetters = new RegExp(/^[a-z]{6}$/i);\nwindow.onload = () => \n{\n\tvar inputs = document.querySelector(\"table\").querySelectorAll(\"input[type='text']\");\n\tinputs.forEach((e,i) => {\n\t\tif (!onlyLetters.test(e.value))\n\t\t{\n\t\t\tif (e.parentElement.innerText.indexOf(\"In the queue\") == -1)\n\t\t\t{\n\t\t\t\tconsole.error(\"ne respecte pas\");\n\t\t\t\tvar button = e.parentElement.querySelector(\"input.btn.btn-danger[type='button']\");\n\t\t\t\tif (typeof button != 'undefined' && button != null)\n\t\t\t\t{\n\t\t\t\t\tbutton.click();\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\te.parentElement.bgColor = \"green\";\n\t\t}\n\t\t\n\t})\n\t\n\tvar interval = getRndInteger(60000,120000);\n\tsetTimeout(() => {window.location.reload()}, interval);\n\tconsole.info(interval);\n}","libs":[],"name":"2CaptchaHelper","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"#container {display: flex!important; flex-flow: row wrap!important; align-content: stretch!important; align-items: stretch!important;}.item {width: 25%!important; flex: 1 0 auto!important; margin: 10px!important;}h1 {color: rgb(255, 255, 255)!important; font-family: Raleway, sans-serif!important; font-size: 62px!important; font-weight: 800!important; line-height: 72px!important; margin: 0px 0px 24px!important; text-align: center!important; text-transform: uppercase!important;}h2 {color: rgb(17, 17, 17)!important; font-family: \"Open Sans\", sans-serif!important; font-size: 30px!important; font-weight: 300!important; line-height: 32px!important; margin: 0px 0px 72px!important; text-align: center!important;}p {color: rgb(104, 82, 6)!important; font-family: \"Helvetica Neue\", sans-serif!important; font-size: 14px!important; line-height: 24px!important; margin: 0px 0px 24px!important; text-align: justify!important;}","css":"#container {\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\nalign-content: stretch;\r\nalign-items: stretch;\r\n}\r\n.item {\r\n\twidth:25%;\r\n\tflex: 1 0 auto;\r\nmargin:10px;\r\nflex-grow:1;\r\nflex-shrink:0;\r\n/*background:#999;*/\r\n}\r\nh1 { color: #ffffff; font-family: 'Raleway',sans-serif; font-size: 62px; font-weight: 800; line-height: 72px; margin: 0 0 24px; text-align: center; text-transform: uppercase; }\r\n\r\n\r\nh2 { color: #111; font-family: 'Open Sans', sans-serif; font-size: 30px; font-weight: 300; line-height: 32px; margin: 0 0 72px; text-align: center; }\r\n\r\n\r\n\r\np { color: #685206; font-family: 'Helvetica Neue', sans-serif; font-size: 14px; line-height: 24px; margin: 0 0 24px; text-align: justify; text-justify: inter-word; }\r\n","id":"https://paid.le-vaillant-economiste.com/wp-json/wp/v2/pages*,https://paid.les-investisseurs.com/wp-json/wp/v2/pages*,https://eric.solutions/pages/wp-json/wp/v2/*,https://publications-agora.fr/wp-json/,https://paradigm.press/wp-json/,https://investisseur-tech.com/wp-json/,https://www.les-investisseurs.com/wp-json/,https://investissements.000webhostapp.com","js":"var dbg = !true;\nfunction isJqueryLoaded()\n{\n\treturn $ !== null;\n}\n\nwindow.onload = \n() => \n{\n\twhile(typeof($) === 'undefined')\n\t{\n\t\tsetInterval(isJqueryLoaded,1)\t\n\t}\n\n\tvar uri = window.location;\n\t$(\"body\").append(\"<h1>\" + new Date().toLocaleString() + \"</h1>\");\n\t$(\"body\").append(\"<input type='button' id='run' value='run!'/>\");\n\t$(\"body\").append(\"<div id='container'><div class='item' id='FR'></div><div class='item' id='US'></div></div>\");\n\t\n$(\"pre\").toggle();\n\n//For the site FR\nvar articles = JSON.parse($(\"pre\").text());\n$(articles).each((i,e)=>createArticle(\"#FR\",e));\n\n//For US site\n/*\n$.get(!dbg ? \"https://paradigm.press\"  + uri.pathname + uri.search : \"https://investissements.000webhostapp.com/wp-content/uploads/2020/posts_from_day_FR.json\").done((d) => $(d).each((i,e) => createArticle(\"#US\",e)));\n*/\n\nfunction createArticle(target,articleObj) {\nvar pArticle = $(\"<p class='article'/>\");\n$(target).append(pArticle);\npArticle.html(\"<h2>\" + articleObj.title.rendered + \"</h2>\" + \"<h3>\" + articleObj.date + \"</h3>\" + articleObj.content.rendered);\n}\n};\n\n\n","libs":["jQuery 3"],"name":"AgoradigmScript","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://freebitco.in/static/html/wof/index.html*","js":"console.log(\"FreebitcoinWOF loaded\");\n\n\nclass Main{\n    solver = \"\";\n    validCaptcha()\n    {\n    \tif([...document.querySelector(\"form.re-captcha-wrapper.captcha-wrapper.active\").classList].findIndex(e => e ==  'active') > -1)\n    \t{\n    \t\tlet waitForLoadCaptchaAnchor = setInterval(() => {\n    \t\t\tlet anchorCaptcha = document.querySelector(\"#recaptcha-anchor\");\n    \t\t\tif (anchorCaptcha != null)\n    \t\t\t{\n    \t\t\t\tclearInterval(waitForLoadCaptchaAnchor);\n    \t\t\t\tanchorCaptcha.click();\n    \t\t\t\tlet waitForCaptchaResolved = setInterval(() => {\n\t\t    \t\t\tlet spinButton = document.querySelector(\".main button.spin-button\");\n\t\t    \t\t\tlet popupCaptcha = document.querySelector(\".popup.popup--captcha._popupCaptcha\");\n\t\t    \t\t\tif (popupCaptcha != null){\n\t\t    \t\t\t\tclearInterval(waitForCaptchaResolved);\n\t\t    \t\t\t\tspinButton.click();\n\t\t    \t\t\t}\n    \t\t\t\t},1000);\n    \t\t\t}\n    \t\t},1000);\n    \t}\n    }\n    \n    solveRecaptcha()\n    {\n    \tlet classListHcaptcha = document.querySelector(\".h-captcha-wrapper\").classList;\n    \t\n    \tif (classListHcaptcha.contains(\"active\"))\n    \t{\n    \t\tclassListHcaptcha.remove(\"active\")\n\t\t\tdocument.querySelector(\".re-captcha-wrapper\").classList.add(\"active\");\n    \t}\n    \t\n    \tlet url = document.querySelector(\"iframe[title='reCAPTCHA']\").getAttribute(\"src\");\n    \tthis.solver = new Solver();\n    \tthis.solver.queryRecaptcha(document.querySelectorAll(\"iframe[title='reCAPTCHA']\")[0].getAttribute(\"src\"));\n    }\n    \n}\n\nlet m = new Main();\nm.validCaptcha();","libs":[],"name":"FreebitcoinWOF","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"http://www.blankwebsite.com/","js":"InjectJs(\"http://192.168.1.157:9000/FaucetLoader.js?v=\" + new Date().getTime(),true,true,\"\",\"\");","libs":["Utils"],"name":"Loader","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"h3.warning {color: red!important;}","css":"h3.warning\n{\n\tcolor:red;\n}","id":"https://free-ltc.com/?v=*,https://freebinancecoin.com/?v=*,https://freebitcoin.io/?v=*,https://freecardano.com/?v=*,https://freeethereum.com/?v=*,https://freechainlink.io/?v=*","js":"var setLoginInterval,setPasswdInterval,clickOnInterval;\nconst FREEBITCOIN_DOMAIN = /^(https:\\/\\/)?freebitco.in\\/*/;\n\nconst FREEETHEREUM_DOMAIN = /^(https:\\/\\/)?freeethereum.com\\/*/i;\nconst FREECARDANO_DOMAIN = /^(https:\\/\\/)?freecardano.com\\/*/i;\nconst FREE_LTC_DOMAIN = /^(https:\\/\\/)?free-ltc.com\\/*/i;\nconst FREEBITCOINIO_DOMAIN = /^(https:\\/\\/)?freebitcoin.io\\/*/i;\nconst FREEBINANCE_DOMAIN = /^(https:\\/\\/)?freebinancecoin.com\\/*/i;\n\nclass Settings\n{\n\tloginInput = \"\";\n\tpasswordInput = \"\";\n\tloginButton = \"\";\n\talertContainer = \"\";\n\t\n\tconstructor()\n\t{\n\t\tif (FREECARDANO_DOMAIN.test(window.location.href)){\n\t\t\tthis.siteCurrency = \"Freecardano\";\n\t\t\tthis.siteCode = \"Freecrypto\";\n\t\t}\n\t\tif (FREE_LTC_DOMAIN.test(window.location.href))\n\t\t{\n\t\t\tthis.siteCurrency = \"Freeltc\";\n\t\t\tthis.siteCode = \"Freecrypto\";\n\t\t}\n\t\tif (FREEBITCOINIO_DOMAIN.test(window.location.href))\n\t\t{\n\t\t\tthis.siteCurrency = \"Freebitcoinio\";\n\t\t\tthis.siteCode = \"Freecrypto\";\n\t\t}\n\t\tif (FREEBINANCE_DOMAIN.test(window.location.href))\n\t\t{\n\t\t\tthis.siteCurrency = \"Freebinance\";\n\t\t\tthis.siteCode = \"Freecrypto\";\n\t\t}\n\t\tif(FREEETHEREUM_DOMAIN.test(window.location.href))\n\t\t{\n\t\t\t\n\t\t\tthis.siteCurrency = \"Freeethereum\";\n\t\t\tthis.siteCode = \"Freecrypto\";\n\t\t}\n\t\tif (this.siteCode == \"Freecrypto\")\n\t\t{\n\t\t\tthis.loginButton = \"button.login\";\n\t\t\tthis.passwordInput=\"input[name='password']\";\n\t\t\tthis.loginInput=\"input[name='email']\";\n\t\t\tthis.alertContainer = \".top\";\n\t\t}\n\t}\n}\nconst settings = new Settings();\nwindow.onload = () => \n{\n\twhile(typeof($) === 'undefined')\n\t{\n\t\tsetInterval(() => $ === 'undefined',1)\t\n\t}\n\n\n\tauth();\n}\n\nconst auth = () => {\n\tif (localStorage.login == undefined ||localStorage.pass == undefined)\n\t{\n\t\t$(settings.alertContainer).append(\"<H3 class='warning'>IL MANQUE UN ELEMENT D'AUTHENTIFICATION</H3\");\n\t\tvar couple = prompt(\"Entrez le couple login mot de passe séparé par 2 points\");\n\t}\n\t\n\tif (typeof couple != 'undefined')\n\t{\n\t\t[localStorage.login,localStorage.pass] = couple.split(':');\n\t}\n\tvar user = localStorage.login;\n\tvar pass = localStorage.pass;\n    console.log(\"Try to log in with \", user, pass);\n    //return {login,pass};\n    setLoginInterval = setTimeout(() =>$(settings.loginInput).val(user),randomInteger(100));\n    setPasswdInterval = setTimeout(() => {\n    \t$(settings.passwordInput).val(pass),randomInteger(100);\n    \tclickOnInterval = setTimeout(() => $(settings.loginButton).click(),randomInteger(100));\n    });\n}","libs":[],"name":"FaucetAuth","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"div.timer {font-size: 3em!important;}","css":"/*\r\nvar config = sessionStorage.config === null ? JSON.parse(window.config) : \"\";\r\nvar user = null;\r\n\r\nvar adminAccountUrl = 'bentaleb.youness@gmail.com';\r\nvar securityToken = 'f2b89f26-1758-4d6d-873a-1000e5d350ee';\r\n\r\nvar excludedMails = ['compte1_65c7@caramail.com'];\r\nvar checkedTimers = [];\r\nvar compteNumber = \"\";\r\nvar rpNeeds = [12,120,300,600,1200];\r\nvar profileMail = \"\";\r\nvar userRpPoints = \"\";\r\nvar redeems = [];\r\nredeems[\"fp_bonus\"] = [\"fp_bonus_\",[32,160,320,1600,3200],3.2];\r\nredeems[\"free_points\"] = [\"free_points_\",[12,120,300,600,1200],12];\r\nvar nagscreenInterval,popupInterval = 0;\r\nvar isGapiLoaded;\r\nvar selectors = config != \"\" ? config.selectors : [\"fp_bonus\",\"free_points\"];\r\nvar process = [];\r\nvar intervalRef = 60000;//1mn\r\nvar timers = [];\r\nvar counters = [];\r\nvar counterTime = 0;\r\nvar forbiddenTimeZones = [];\r\nvar dateTimeCounterRegex = new RegExp(\"([0-9]+)h:([0-9]+)m:([0-9]+)s\");\r\nvar HourAsIsoDate = (hour) => { return new Date(new Date().toISOString().substring(0,11) + hour)};\r\nvar countdowns = [];\r\nvar balanceBtc = \"\";\r\nG = Gain H = balance O = date\r\n240x80\r\n*/\r\ndiv.timer\r\n{\r\n\tfont-size: 3em;\r\n}","id":"https://freebitco.in/?op=home,https://free-ltc.com/*,https://freeethereum.com/*,https://freebinancecoin.com/*,https://freebitcoin.io/*,https://freecardano.com/*,!https://freebitco.in/?op=signup_page,!https://freebitco.in/?op=email_verify*,!https://freebitco.in/?op=stat*,!https://free-ltc.com/?v=*,!https://freeethereum.com/?v=*,!https://freebinancecoin.com/?v=*,!https://freebitco.in/?v=*,!https://freebitcoin.io/?v=*,!https://freecardano.com/?v=*","js":"InjectJs(\"http://192.168.1.157:9000/FaucetSolver.js?v=\" + new Date().getTime(),true,true,\"\",\"\");\n\n","libs":["Utils"],"name":"FaucetSolver","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://dashboard.hcaptcha.com/welcome_accessibility","js":"console.log(\"loaded\");\n\nlet setAccessibilityCookie = setTimeout(function() {\n\tdocument.querySelector(\"button[data-cy='setAccessibilityCookie']\").click();\n\tsetTimeout(() => self.close(),randomInteger(60000));\n}, 10000);","libs":[],"name":"HcaptchaGetCookie","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://freebitco.in/?op=home,https://freebitco.in/static/html/wof/index.html*","js":"class Solver\r\n{\r\n\tsolverDomain = \"\";\r\n\tcaptchaSolverKey = \"ea7f60647bc74057705601eb957e420b\";//\"6vjf2cw3zhxpvpdlzfqrcg7qbkktmn98\";\r\n\timgUrls = [];\r\n\t\r\n\t\r\n\tsolveTimeout = [];\r\n\tjsonReturns = [];\r\n\tdigests = [];\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tconsole.error(\"Solver class loaded\");\r\n\t\tthis.digests = [];\r\n\t\tthis.solverReference =  typeof settings != 'undefined' && settings.solverReference || \"AZ\";\r\n\t\tthis.captchaCanvasSelector = typeof settings != 'undefined' && settings.captchaCanvasSelector || \"\";\r\n\t\tthis.captchaResponse = typeof settings != 'undefined' && settings.captchaResponse || \"\";\r\n\t\tthis.captchaRegEx = typeof settings != 'undefined' && settings.captchaRegEx || \"\";\r\n\t\tswitch (this.solverReference)\r\n\t\t{\r\n\t\t\tcase \"AZ\":\r\n\t\t\t\tthis.solverDomain = 'http://azcaptcha.com';\r\n\t\t\t\tthis.captchaSolverKey = \"6vjf2cw3zhxpvpdlzfqrcg7qbkktmn98\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2C\":\r\n\t\t\t\tthis.solverDomain = 'http://discount.2captcha.com';//'http://azcaptcha.com';\r\n\t\t\t\tthis.captchaSolverKey = \"ea7f60647bc74057705601eb957e420b\";\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\t\r\n\t\r\n\tcheckImgExpired()\r\n\t{\r\n\t\tdocument.querySelectorAll(\".renewedTime\").forEach((e,i) => {\r\n\t\t    let imgLoadedTime = e.getAttribute(\"data-time\");    \r\n\t\t    let diff = (new Date() - imgLoadedTime)\r\n\t\t    if (diff/1000/60 > 2)\r\n\t\t    {\r\n\t\t        this.renewCaptcha(i);\r\n\t\t    }      \r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tqueryCaptcha(i){\r\n\t\tconsole.warn(`Envoi du captcha ${i}`);\r\n\t\tlet dataUrl = \"\";\r\n\r\n    \tlet calculateNewCanvas = () => {\r\n\t    \t\tlet e = document.querySelectorAll(this.captchaCanvasSelector)[i];\r\n\t    \t\tlet waitForLoadCanvas = setInterval(() =>{\r\n\t    \t\tdataUrl = getDataUrl(e);\r\n\t    \t\tdigestMessage(dataUrl).then((digest) => \r\n\t    \t\t{\r\n\t\t    \t\tif (this.digests.indexOf(digest) > -1)\r\n\t\t    \t\t{\r\n\t\t    \t\t\tconsole.error(\"Ce canvas a dÃ©ja Ã©tÃ© envoyÃ© pour analyse\");\r\n\t\t    \t\t\tclearInterval(waitForLoadCanvas);\r\n\t\t    \t\t\treturn;\r\n\t\t    \t\t}\r\n\t\t\t\t\t\t    \t\t\t\r\n\t\t\t\t\t\t    \t\t\t\r\n\t\t\t\t\tif (dataUrl.length > 772 && dataUrl != game.party.blankRefCaptcha)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.digests[i] = digest;\r\n\t\t\t\t\t\tclearInterval(waitForLoadCanvas);\r\n\t\t\t\t\t\tlet bodyRequest = {\r\n\t\t\t\t            key: this.captchaSolverKey,\r\n\t\t\t\t            body: getDataUrl(e),\r\n\t\t\t\t            method:\"base64\",\r\n\t\t\t\t            json:1,\r\n\r\n\t\t\t\t            textinstructions:\"please enter the 6 letters that you see in the pictures,please not 0,1,2,3,4,5,6,7,8,9\"\r\n\t\t\t\t        };\r\n\t\t\t\t        \r\n\t\t\t\t        if (this.solverReference == \"2C\")\r\n\t\t\t\t        {\r\n\t\t\t\t        \tbodyRequest[\"numeric\"] = 2;\r\n\t\t\t\t        \tbodyRequest[\"min_len\"] = 6;\r\n\t\t\t\t        \tbodyRequest[\"max_len\"] = 6;\r\n\t\t\t\t        }\r\n\t\t\t\t        \r\n\t\t\t\t\t\tlet txtBox = document.querySelectorAll(this.captchaResponse)[i];\r\n\t\t\t\t        $(txtBox).css(\"backgroundColor\",\"white\");\r\n\t\t\t\t        \r\n\t\t\t\t\t\t$.post(`${this.solverDomain}/in.php`, bodyRequest)\r\n\t\t\t\t        .done((queried) => {\r\n\t\t\t\t        \tif (queried.request == \"ERROR_WRONG_FILE_EXTENSION\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(\"Encore ce problème d'extension de fichier erroné!\");\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet maybeJson = JSON.parse(queried);\r\n\t\t\t\t\t\t\tif (typeof maybeJson != undefined)\r\n\t\t\t\t\t\t\t\tqueried = maybeJson;\r\n\t\t\t\t        \t//queried = settings.solverReference == \"AZ\" ? JSON.parse(queried) : queried;\r\n\t\t\t\t        \t$(txtBox).css(\"backgroundColor\",\"pink\");\r\n\t\t\t\t        \tthis.jsonReturns[i]= queried;console.log(this.jsonReturns);\r\n\t\t\t\t        })\r\n\t\t\t\t\t}\r\n\t    \t\t})\r\n\t\t\t},10000)\r\n\t\t}; \t\t\r\n\t\t\r\n\t\tcalculateNewCanvas();\r\n\t\tlet waitForQueryFinished = setInterval(() => {\r\n\t\t\tif(this.jsonReturns[i] != undefined && this.jsonReturns[i].hasOwnProperty(\"request\"))\r\n\t\t\t{\r\n\t\t\t\tclearInterval(waitForQueryFinished);\r\n\t\t\t\tthis.resolveCaptcha(this.jsonReturns[i].request,i);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Querying again\");\r\n\t\t\t}\r\n\t\t},1000);\r\n\t}\r\n\r\n\trenewCaptcha(i)\r\n\t{\r\n\t\tconsole.warn(\"Génération d'un nouveau captcha\");\r\n\t\tthis.digests.splice(i,1);\r\n\t\tlet e = document.querySelectorAll(this.captchaCanvasSelector)[i];\r\n\t\tlet captchaBox = e.parentElement.parentElement;\r\n\t\tlet txtBox = document.querySelectorAll(this.captchaResponse)[i];\r\n\t\t$(txtBox).css(\"backgroundColor\",\"white\");\r\n\t\tcaptchaBox.querySelector(\"p.captchasnet_captcha_change_p.captchasnet_captcha_refresh i\").dispatchEvent(new MouseEvent(\"click\",{bubbles: true, cancellable: true}));\r\n\t}\r\n\t\r\n\tqueryAllCaptcha() {\r\n\t\tconsole.warn(`queryAllCaptcha appellé`);\r\n\t\tthis.jsonReturns = [];\r\n\t\tsolver.rollIsRunning = true;\r\n\t    $(this.captchaCanvasSelector).each((i,e) => {\r\n\t    \tthis.queryCaptcha(i);\r\n\t    });\r\n\t}\r\n\t\r\n\tgetCaptchaIndex(requestId)\r\n\t{\r\n\t\treturn this.jsonReturns.findIndex((e) => e != undefined && e.request != undefined && e.request == requestId);\r\n\t}\r\n\t\r\n\tresolveAllCaptcha()\r\n\t{\r\n\t\tthis.jsonReturns.forEach((e,i) => \r\n\t\t{\r\n\t\t\tif(typeof e.result == 'undefined')\r\n\t\t\t{\r\n\t\t \t\tthis.resolveCaptcha(e.request,i);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\treportBad(requestId)\r\n\t{\r\n\t\t$.ajax({url:`${this.solverDomain}/res.php?key=${this.captchaSolverKey}&action=reportbad&id=${requestId}`,timeout:20000,method:'get'})\r\n\t\t.done((response) => console.log(`${requestId} captcha a bien été reporté faux`));\r\n\t}\r\n\t\r\n\tqueryRecaptcha(googleUrl)\r\n\t{\r\n\t\tlet data ={};\r\n\t\tlet url = new URL(googleUrl);\r\n\t\tlet searchParams = url.searchParams;\r\n\t\t\r\n\t\tdata.key = this.captchaSolverKey;\r\n\t\tdata.method = \"userrecaptcha\";\r\n\t\tdata.googlekey = searchParams.get(\"k\");\r\n\t\tdata.pageurl = googleUrl;\r\n\t\tdata.json = 1;\r\n\t\t$.post(`${this.solverDomain}/in.php`, data)\r\n\t\t\t\t        .done((data) => {\r\n\t\t\t\t        \tif (data.request == \"ERROR_WRONG_FILE_EXTENSION\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(\"Encore ce problème d'extension de fichier erroné!\");\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet maybeJson = JSON.parse(data);\r\n\t\t\t\t\t\t\tif (typeof maybeJson != undefined)\r\n\t\t\t\t\t\t\t\tdata = maybeJson;\r\n\t\t\t\t\t\t\tconsole.log(data,maybeJson);\r\n\t\t\t\t\t\t\tthis.waitToSolveRecaptcha = setTimeout(() => this.resolveRecaptcha(data.request),20000);\r\n\t\t\t\t        })\r\n\t}\r\n\t\r\n\tresolveRecaptcha(requestId)\r\n\t{\r\n\t\tconsole.warn(`resolveReCaptcha appellé`);\r\n\t\t\t$.ajax({url:`${this.solverDomain}/res.php?key=${this.captchaSolverKey}&action=get&id=${requestId}&json=1`,timeout:20000,method:'get'})\r\n\t\t\t.done((response) => \r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tlet maybeJson = JSON.parse(response);\r\n\t\t\t\tif (typeof maybeJson != undefined)\r\n\t\t\t\t\tresponse = maybeJson;\r\n\t\t\t\tif (response.request == \"CAPCHA_NOT_READY\")\r\n\t\t\t\t{\r\n\t\t\t\t\tsetTimeout(() => this.resolveRecaptcha(requestId),5000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (response.request == \"ERROR_CAPTCHA_UNSOLVABLE\")\r\n\t\t\t\t{\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//document.getElementById(\"g-recaptcha-response\").innerHTML=response.request;\r\n\t\t\t\twindow.___grecaptcha_cfg.clients[0].Z.Z.callback(response.request,\"re-captcha\");\r\n\t\t\t})\r\n\t}\r\n\t\r\n\t\r\n\tresolveCaptcha(requestId,captchaIndex) {\r\n\t\t\tconsole.warn(`resolveCaptcha appellé`);\r\n\t\t\t$.ajax({url:`${this.solverDomain}/res.php?key=${this.captchaSolverKey}&action=get&id=${requestId}&json=1`,timeout:20000,method:'get'})\r\n\t\t\t.done((response) => \r\n\t\t\t{\r\n\t\t\t\tlet maybeJson = JSON.parse(response);\r\n\t\t\t\tif (typeof maybeJson != undefined)\r\n\t\t\t\t\tresponse = maybeJson;\r\n\r\n\t\t\t\tlet isValidCaptcha = this.captchaRegEx.test(response.request);\r\n\t\t\t\tif (response.request == \"CAPCHA_NOT_READY\")\r\n\t\t\t\t{\r\n\t\t\t\t\tsetTimeout(() => this.resolveCaptcha(requestId,captchaIndex),5000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//Captcha unsolvable ou non valide, on le change\r\n\t\t\t\telse if (response.request == \"ERROR_CAPTCHA_UNSOLVABLE\" || !isValidCaptcha) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (!isValidCaptcha){\r\n\t\t\t\t\t\tthis.reportBad(requestId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.renewCaptcha(captchaIndex);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//this.jsonReturns[captchaIndex].result = response;\r\n\t\r\n\t\t\t\t$(this.captchaResponse).eq(captchaIndex).val(response.request);\r\n\t\t\t\t\r\n\t\t\t\tthis.jsonReturns.splice(captchaIndex,1);\r\n\t\t\t})\r\n\t\t\t.error((XMLHttpRequest, textStatus, errorThrown)  =>\r\n\t\t\t{\r\n        \t\tif (textStatus == 'timeout') {\r\n        \t\t\tconsole.error(\"Azcaptcha was unreachable\");\r\n        \t\t}\r\n            // timeout occured\r\n        \t\telse {\r\n            // other error occured (see errorThrown variable)\r\n\t\t        }\r\n\t\t     })\r\n\t}\r\n\t\r\n\thackRecaptcha()\r\n\t{\r\n\t\tvar sid = setInterval(function () {\r\n    if (window.location.href.match(/https:\\/\\/www.google.com\\/recaptcha\\/api\\d\\/anchor/) && $(\"#recaptcha-anchor div.recaptcha-checkbox-checkmark\").length\r\n            && $(\"#recaptcha-anchor div.recaptcha-checkbox-checkmark\").is(':visible')  && isScrolledIntoView($(\"#recaptcha-anchor div.recaptcha-checkbox-checkmark\").get(0)))\r\n        {\r\n            var execute = true;\r\n\r\n            if (sessionStorage.getItem('accesstime'))\r\n                {\r\n                    if (new Date().getTime() - sessionStorage.getItem('accesstime') < 7000)\r\n                        {\r\n                            execute = false;\r\n                        }\r\n                }\r\n\r\n            if (execute)\r\n                {\r\n                    $(\"#recaptcha-anchor div.recaptcha-checkbox-checkmark\").click();                    \r\n                    sessionStorage.setItem('accesstime', new Date().getTime());\r\n                }\r\n                clearInterval(sid);\r\n\r\n        }\r\n}, 500);\r\n\t}\r\n}","libs":[],"name":"Solver","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":".blinking {animation: 1s ease 0s infinite normal none running blinkingText!important; background-color: rgb(252, 3, 11)!important;}@keyframes blinkingText { \n  0% { opacity: 0; }\n  50% { opacity: 0.5; }\n  100% { opacity: 1; }\n}","css":"    /* Set the size, colour, font properties for the blinking text */\r\n        .blinking {\r\n            animation: blinkingText 1s infinite;\r\n            background-color: #fc030b;\r\n        }\r\n        \r\n        /* Specifies the animation and transparency for the blinking text */\r\n        @keyframes blinkingText {\r\n   \r\n            0% {\r\n                opacity: 0;\r\n            }\r\n            50% {\r\n                opacity: .5;\r\n            }\r\n            100% {\r\n                opacity: 1;\r\n            }\r\n        }\r\n","id":"https://dashboard.hcaptcha.com/welcome_accessibility,http://www.blankwebsite.com/,https://www.floraqueen.com/,https://betfury.io/*,https://eve*.xyz/*,https://console.cloud.google.com/compute/instances?project=lofty-stack-290312,https://2captcha.com/statistics/uploads*","js":"class TimeZone\r\n{\r\n\ttimestart = null;\r\n\ttimeend = null;\r\n\t\r\n\tconstructor(hourInterval)\r\n\t{\r\n\t\t\r\n\t\tthis.timestart = this.HourAsIsoDate(hourInterval.low);\t\r\n\t\tthis.timeend = this.HourAsIsoDate(hourInterval.high);\r\n\t}\r\n\t\r\n\t\r\n\tHourAsIsoDate(hour)\r\n\t{ \r\n\t\treturn new Date(new Date().toISOString().substring(0,11) + hour)\r\n\t}\r\n\t\r\n\tisInInterval(hour) {return this.HourAsIsoDate(hour).getTime() < this.timeend.getTime() && this.HourAsIsoDate(hour).getTime() > this.timestart.getTime()};\r\n}\r\n\r\nclass Arlequin\r\n{\r\n    windowMethods = [];\r\n    mathMethods = [];\r\n    \r\n    constructor()\r\n    {\r\n        this.backupWindowsMethods();\r\n        this.backupMathMethods();\r\n    }\r\n\r\n    backupWindowsMethods(){\r\n        this.windowMethods[\"interval\"] = window.setInterval;\r\n        this.windowMethods[\"timeout\"] = window.setTimeout;\r\n    }\r\n\r\n    backupMathMethods(){\r\n        this.mathMethods[\"random\"] = Math.random;        \r\n    }\r\n\r\n    setMethod(methodName, bodyMethod){\r\n        switch(methodName.toLowerCase()){\r\n            case \"random\":\r\n                Math[\"random\"] = bodyMethod;\r\n            break;\r\n            case \"timeout\":\r\n                windows[\"setTimeout\"] = bodyMethod;\r\n            break;\r\n            case \"interval\":\r\n                windows[\"setInterval\"] = bodyMethod;\r\n            break;            \r\n        }\r\n    }\r\n\r\n    restoreMethod(methodName)\r\n    {\r\n        switch(methodName.toLowerCase()){\r\n            case \"random\":\r\n                Math[\"random\"] = this.mathMethods[methodName];\r\n            break;\r\n            case \"timeout\":\r\n                windows[\"setTimeout\"] = this.windowMethods[methodName];\r\n            break;\r\n            case \"interval\":\r\n                windows[\"setInterval\"] = this.windowMethods[methodName];\r\n            break;            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass CloneTimers{\r\n    \r\n    intervals = [];    \r\n    timeouts = [];\r\n    consoleLogStyle=\"font-size: x-large;margin-left:10px;border:1px solid black\";\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n    generateTimerObject(f,t){\r\n        return {\"function\":f.toString(),\"delay\":t}\r\n    }\r\n\r\n    setTimeout(f,t){       \r\n        let toSet = this.generateTimerObject(f,t); \r\n        toSet.id = window.setTimeout(f,t);\r\n        console.log(toSet.id);\r\n        this.timeouts.push(toSet);\r\n    }\r\n\r\n    setInterval(f,t)\r\n    {\r\n        let toSet = this.generateTimerObject(f,t);\r\n        toSet.id = window.setTimeout(f,t);\r\n        console.log(toSet.id);\r\n        this.intervals.push(toSet);\r\n    }\r\n    \r\n    logHeader()\r\n    {\r\n        console.log(\"%c id|delay|function body\",this.consoleLogStyle);\r\n    }\r\n\r\n    log(e){\r\n        console.log(`%c ${e.id}|${e.delay}|${e.function}`,this.consoleLogStyle);   \r\n    }\r\n\r\n    showIntervals()\r\n    {\r\n        this.logHeader();\r\n        this.intervals.forEach((e,i) => {\r\n            this.log(e);\r\n        })\r\n    }\r\n\r\n    showTimeouts()\r\n    {\r\n        this.logHeader();\r\n        $(this.timeouts).forEach((e,i) => {\r\n            this.log(e);   \r\n        })     \r\n    }\r\n\r\n    clearInterval(t)\r\n    {\r\n        window.clearInterval(t);\r\n        let idx = this.intervals.findIndex(e => e.id == t)\r\n        if (idx != -1)\r\n            this.intervals.splice(idx,1);   \r\n    }\r\n\r\n    clearTimeout(t)\r\n    {\r\n        window.clearTimeout(t);\r\n        let idx = this.timeouts.findIndex(e => e.id == t)\r\n        if (idx != -1)\r\n            this.timeouts.splice(idx,1);\r\n        this.timeouts.splice(t,1);   \r\n    }\r\n\r\n}\r\n\r\n\r\nvar auths = [];\r\nvar values = [];\r\n\r\nvar CLOUD_COMPUTE_API_VERSION = 'v1';\r\nvar CLOUD_COMPUTE_ENGINE_API_KEY = \"QUl6YVN5RGVuNDR4OWZKLWxEd0xEWHV4VUxDeFJHQW1tckl1OUdv\";\r\nvar CLOUD_COMPUTE_ENGINE_CLIENT_ID = '930935452270-r735mpq32d3fkli1lu7s0cn9m31dt1r1.apps.googleusercontent.com';\r\nvar CLOUD_COMPUTE_ENGINE_SCOPES = 'https://www.googleapis.com/auth/compute';\r\n//https://www.googleapis.com/auth/cloud-platform'];\r\n\r\nvar GOOGLE_SHEET_ID = \"1eWM4w9IAKhMb2rWZUMK31f9S4O4t2sEkKjdohROhmtE\";\r\nvar GOOGLE_SHEETS_API_KEY = \"AIzaSyB6cpl9KtwStLc8bFZGyEHryBg5XY6PX50\";\r\nvar GOOGLE_SHEETS_CLIENT_ID = '659142072690-co0fa66mn7mfsrba0msser9djfu9bfjb.apps.googleusercontent.com';\r\nvar GOOGLE_SHEETS_SCOPES = ['https://www.googleapis.com/auth/spreadsheets','https://www.googleapis.com/auth/gmail.readonly'];\r\nvar MAIL_SECURITY_TOKEN = \"9054b0f2-faca-4969-9142-1e5fa386803d\";//\"f2b89f26-1758-4d6d-873a-1000e5d350ee\";\r\nvar CHARSET = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\n\r\nfunction isScrolledIntoView(elem)\r\n{\r\n    var docViewTop = $(window).scrollTop();\r\n    var docViewBottom = docViewTop + $(window).height();\r\n\r\n    var elemTop = $(elem).offset().top;\r\n    var elemBottom = elemTop + $(elem).height();\r\n\r\n    return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));\r\n}\r\n\r\n\r\nfunction getCookieValue(value){\r\nvar cookieSplitted = $(document.cookie.replace(' ','').split(\";\"));\r\nvar valuesSplitted = [];\r\n$(cookieSplitted).each((i,e) => valuesSplitted.push(e.split(\"=\")));\r\nvar token = \"not found\" ; \r\nfor(var i in valuesSplitted){\r\n\tif (valuesSplitted[i][0] == value) {\r\n\t\ttoken = valuesSplitted[i][1];break;\r\n\t\t}\r\n\t\tcontinue;\r\n\t\r\n}\r\nreturn token\r\n}\r\n\r\n\r\n// select a list of matching elements, context is optional\r\nfunction $$(selector, context) {\r\n    return (context || document).querySelectorAll(selector);\r\n}\r\n\r\n// select the first match only, context is optional\r\nfunction $1(selector, context) {\r\n    return (context || document).querySelector(selector);\r\n}\r\n\r\nfunction createRandomText(len = 7,seed = CHARSET)\r\n{\r\n\tlet chain = \"\";\r\n\tfor(i=0;i<=len;i++) {\r\n\t\tchain = chain.concat(seed[Math.floor((Math.random() * seed.length))]);\r\n\t}\r\n\treturn chain;\r\n}\r\n\r\n\r\nfunction downloadFile(textContent,fileName)\r\n{\r\n\tlet content = new Blob([textContent], {type: 'text/plain'});\r\n\tlet anchor = document.createElement(\"a\");\r\n\tanchor.setAttribute(\"href\",window.URL.createObjectURL(content));\r\n\tanchor.setAttribute('download',fileName);\r\n\tanchor.click();\t\r\n}\r\n\r\n\r\nfunction createMutationObserver(selector)\r\n{\r\n\t// Selectionne le noeud dont les mutations seront observées\r\n\tvar targetNode = document.querySelector(selector);\r\n\r\n\t// Options de l'observateur (quelles sont les mutations à observer)\r\n\tvar config = { attributes: true, childList: true };\r\n\t\r\n\t// Fonction callback à éxécuter quand une mutation est observée\r\n\tvar callback = function(mutationsList) {\r\n\t    for(var mutation of mutationsList) {\r\n\t        if (mutation.type == 'childList') {\r\n\t            console.log('Un noeud enfant a été ajouté ou supprimé.');\r\n\t        }\r\n\t        else if (mutation.type == 'attributes') {\r\n\t            console.log(\"L'attribut '\" + mutation.attributeName + \"' a été modifié.\");\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\t// Créé une instance de l'observateur lié à la fonction de callback\r\n\tvar observer = new MutationObserver(callback);\r\n\t\r\n\t// Commence à observer le noeud cible pour les mutations précédemment configurées\r\n\tobserver.observe(targetNode, config);\r\n\t\r\n\t// L'observation peut être arrêtée par la suite\r\n\tobserver.disconnect();\r\n}\r\n\r\n\r\nfunction getAjax(url, success) {\r\n    var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\r\n    xhr.open('GET', url);\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState>3 && xhr.status==200) success(xhr.responseText);\r\n    };\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    xhr.send();\r\n    return xhr;\r\n}\r\n\r\nfunction postAjax(url, data, success) {\r\n    var params = typeof data == 'string' ? data : Object.keys(data).map(\r\n            function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }\r\n        ).join('&');\r\n\r\n    var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    xhr.open('POST', url);\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState>3 && xhr.status==200) { success(xhr.responseText); }\r\n    };\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    xhr.setRequestHeader('pragma','no-cache');\r\n    xhr.setRequestHeader('cache-control', 'max-age=0');\r\n    xhr.send(params);\r\n    return xhr;\r\n}\r\n\r\n// helper for enabling IE 8 event bindings\r\nfunction addEvent(el, type, handler) {\r\n    if (el.attachEvent) el.attachEvent('on'+type, handler); else el.addEventListener(type, handler);\r\n}\r\n\r\n// live binding helper\r\nfunction live(selector, event, callback, context) {\r\n    addEvent(context || document, event, function(e) {\r\n        var found, el = e.target || e.srcElement;\r\n        while (el && !(found = el.id == selector)) el = el.parentElement;\r\n        if (found) callback.call(el, e);\r\n    });\r\n}\r\n\r\n\r\nasync function digestMessage(message) {\r\n  const msgUint8 = new TextEncoder().encode(message);                           // encode comme (utf-8) Uint8Array\r\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8);           // fait le condensÃ©\r\n  const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convertit le buffer en tableau d'octet\r\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convertit le tableau en chaÃ®ne hexadÃ©limale\r\n  return hashHex;\r\n}\r\n\r\n\r\nvar createCanvas = (img) => {\r\n\t// Create canvas\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    // Set width and height and origin to anonymous\r\n    $(img).attr(\"crossOrigin\",\"Anonymous\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    // Draw the image\r\n    ctx.drawImage(img, 0, 0);\r\n    return canvas;\r\n}\r\n\r\n\r\nvar createSnapShot = (selector,site) => \r\n{\r\n\thtml2canvas(document.querySelector(selector),{\r\n\tscrollX: 0,\r\n\tscrollY: -window.scrollY\r\n\t}).then((canvas) => localStorage[site] = canvas.toDataURL(\"image/png\"))\r\n}\r\n\r\n\r\nvar dataURLToImage = (dataURL) => {\r\n  let image = new Image();\r\n  image.src = dataURL;\r\n  return image;\r\n}\r\n\r\n\r\nvar getDataUrl = (img) => {\r\n\tvar dataURL = createCanvas(img).toDataURL('image/png');\r\n\treturn dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n}\r\n\r\nvar fnNumberAsString = (e)=>\r\n{\r\n    var len = ((e + \"\").length) - 2;\r\n    console.log(len);\r\n    divide = Math.pow(10,len);\r\n    console.log(divide);\r\n    return e.map((e,i,arr)=>i == 0 ? arr[i] : arr[i - 1] + (arr[i] / divide))\r\n}\r\n\r\n\r\n\r\nfunction isSelectorReady(selector)\r\n{\r\n\treturn $(selector).length != 0;\r\n}\r\n\r\nfunction isSelectorFilled(selector)\r\n{\r\n\tif(!isSelectorReady(selector))\r\n\t\treturn false;\r\n\treturn $(selector).text() != \"\" || $(selector).val() != \"\";\t\t\r\n}\r\n\r\n\r\nfunction isSelectorVisible(selector)\r\n{\r\n\t\r\n\tif (!isSelectorReady(selector))\r\n\t\treturn false;\r\n\tlet elem = document.querySelector(selector);\r\n\tconst style = getComputedStyle(elem);\r\n\tif (style.display === 'none') return false;\r\n\tif (style.visibility !== 'visible') return false;\r\n\tif (style.opacity < 0.1) return false;\r\n\t/*\r\n\tlet elem = document.querySelector(selector);\r\n    if (!(elem instanceof Element)) throw Error('DomUtil: elem is not an element.');\r\n    const style = getComputedStyle(elem);\r\n    if (style.display === 'none') return false;\r\n    if (style.visibility !== 'visible') return false;\r\n    if (style.opacity < 0.1) return false;\r\n    if (elem.offsetWidth + elem.offsetHeight + elem.getBoundingClientRect().height +\r\n        elem.getBoundingClientRect().width === 0) {\r\n        return false;\r\n    }\r\n    const elemCenter   = {\r\n        x: elem.getBoundingClientRect().left + elem.offsetWidth / 2,\r\n        y: elem.getBoundingClientRect().top + elem.offsetHeight / 2\r\n    };\r\n    if (elemCenter.x < 0) return false;\r\n    if (elemCenter.x > (document.documentElement.clientWidth || window.innerWidth)) return false;\r\n    if (elemCenter.y < 0) return false;\r\n    if (elemCenter.y > (document.documentElement.clientHeight || window.innerHeight)) return false;\r\n    let pointContainer = document.elementFromPoint(elemCenter.x, elemCenter.y);\r\n    do {\r\n        if (pointContainer === elem) return true;\r\n    } while (pointContainer = pointContainer.parentNode);\r\n    return false;\r\n    */\r\n}\r\n\r\nfunction sendEmail(securityToken,to,from,subject,body) \r\n{\r\n\tEmail.send({\r\n\tSecureToken : securityToken,\r\n\tTo : to,\r\n\tFrom : \"bypresta@gmail.com\",\r\n\tSubject : subject,\r\n\tBody : body,\r\n\t}).then(\r\n\t\tmessage => console.log(message)\r\n\t);\r\n}\r\n\r\n\r\n\r\nfunction isJqueryLoaded() {\r\n\tconsole.log(\"Utils:\",\"isJqueryLoaded\",\"called\");\r\n    return jQuery !== null;\r\n}\r\n\r\nfunction InjectJs(src,isAsync,isDefer,onLoadCallBack,onReadyStateChangeCallBack)\r\n{\r\n\tif (window.debugger)\r\n\t\tdebugger;\r\n\tvar script = $(\"<script \" +  isAsync ? 'async ' : '' + isDefer ? 'defer ' : '' + '/>');\r\n\tscript.attr(\"src\",src);\r\n\tscript.attr(\"onload\",onLoadCallBack);\r\n\tscript.attr(\"onreadystatechange\",onReadyStateChangeCallBack);\r\n/*\r\n\tvar script = '<script ';\r\n\tscript += isAsync ? 'async ' : '';\r\n\tscript += isDefer ? 'defer ' : '';\r\n*/\t\r\n\t$(\"body\").append(script);\r\n}\r\n\r\n\r\nfunction randomInteger(max)\r\n{\r\n\tvar wait = Math.floor(Math.random() * max);\r\n\tconsole.log(wait);\r\n\treturn wait;\r\n}\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}\r\n\r\nfunction FindFirstLower(arr,item)\r\n{\r\n\tif(/,|\\./.test(item)) item = item.replace(/,|\\./,'');\r\n\tvar lowerValue = 0;\r\n\tif(parseInt(item) > parseInt(arr[arr.length-1])) return arr[arr.length-1];\r\n\tfor(var i in arr)\r\n\t{\r\n\t\tif (arr[i] <= item){\r\n\t\t\tlowerValue = arr[i];\r\n\t\t\t//break;\r\n\t\t}\r\n\t\telse\r\n\t\t\tbreak;\r\n\t}\r\n\treturn lowerValue;\r\n}\r\n\r\n\r\nfunction sheetAsJson(url,columnName,callback){\r\n\t\r\n$.get(url)\r\n\t.done((data) => {\r\n\t\tvar entries = data.feed.entry;\r\n\t\tvar passColumn = entries.find((e) => e.content.$t == columnName);\r\n\t\tvar passColumnId = parseInt(passColumn.gs$cell.col);\r\n\t\tvar rowWanted = 1;\r\n\t\tvar colWanted = entries.find((e,i) => i > 0 && e.gs$cell.row == rowWanted \r\n\t\t\t&& e.gs$cell.inputValue == columnName).gs$cell.col;\r\n\t\trowWanted++;\r\n\t\tfor(var i = 0;i< entries.length-1;i++)\r\n\t\t{\r\n\t\t\tvar entry = entries.find((e,i) => e.gs$cell.row == rowWanted \r\n\t\t\t&& e.gs$cell.col == colWanted);\r\n\t\t\tif(typeof(entry) != \"undefined\")\r\n\t\t\t\tvalues.push(entry.content.$t);\r\n\t\t\trowWanted++;\t\t\t\t\r\n\t\t}\r\n\t})\r\n\treturn values;\r\n}\r\n\r\nfunction CountDown(selector, duration) {\r\n    var start = Date.now(), diff, hours, minutes, seconds;\r\n    var timer_run = setInterval(function timer() {\r\n        diff = duration - (((Date.now() - start) / 1000) | 0);\r\n        hours = (diff / (60 * 60)) | 0;\r\n        minutes = ((diff - (hours * 60 * 60)) / 60) | 0;\r\n        seconds = (diff - (minutes * 60) - (hours * 60 * 60)) | 0;\r\n        hours = hours < 10 ? \"0\" + hours : hours;\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n        $(selector).html(hours + 'h:' + minutes + 'm:' + seconds + 's');\r\n        if (timer_run !== null) {\r\n        if (diff <= 0) {\r\n        \t$(selector).addClass(\"blinking\");\r\n            clearInterval(timer_run);\r\n            return;\r\n        }\r\n        }\r\n    }, 1000);\r\n}\r\n\r\nfunction InjectCss(link)\r\n{\r\n\t$(\"head\").append('<link rel=\"stylesheet\" href=\"' + link + '\">');\r\n}\r\n\r\nfunction InjectJs(src,isAsync,isDefer,onLoadCallBack,onReadyStateChangeCallBack)\r\n{\r\n\tvar script = $('<script>', {\r\n    type: 'text/javascript',\r\n    src: src\r\n\t});\r\n\t\r\n\tif (isAsync)\r\n\t\tscript[0].setAttribute(\"async\", \"\");\t\t\r\n\r\n\tif (isDefer)\r\n\t\tscript[0].setAttribute(\"async\", \"\");\t\t\r\n\t\t\r\n\tscript[0].setAttribute(\"onload\",onLoadCallBack);\r\n\tscript[0].setAttribute(\"onreadystatechange\",onReadyStateChangeCallBack);\r\n\t$('body').before(script);\r\n}\r\n\r\nfunction HideSelector(selector)\r\n{\r\n\tif ($(selector).length > 0)\r\n\tdo{\r\n\t\t($(selector).is(\":visible\"))\r\n\t}while($(selector).is(\"hidden\"));\r\n}\r\n\r\n\r\nfunction ClearCookie(){\r\nvar cookie = document.cookie.split(';');\r\n\r\nfor (var i = 0; i < cookie.length; i++) {\r\n\r\n    var chip = cookie[i],\r\n        entry = chip.split(\"=\"),\r\n        name = entry[0];\r\n\r\n    document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n}\r\n}\r\n\r\n\r\n/* GOOGLE API */\r\n\r\n\t/* Google Cloud Platform */ \r\n\r\n\r\n\r\nfunction googleComputeAuthorize(apiKey,clientId,scopes) {\r\n       gapi.client.setApiKey(apiKey);\r\n       gapi.auth.authorize({\r\n         client_id: clientId,\r\n         scope: scopes,\r\n         immediate: false\r\n       }, function(authResult) {\r\n            if (authResult && !authResult.error) {\r\n              handleClientLoad();\r\n            } else {\r\n              window.alert('Auth was not successful');\r\n            }\r\n          }\r\n       );\r\n     }\r\n \r\n \r\n \r\n \r\nfunction googleComputeListInstances(project,zone,callback) {\r\n  var request = gapi.client.compute.instances.list({\r\n    'project': project,\r\n    'zone': zone\r\n  });\r\n  request.execute(function(resp) {\r\n    callback(resp);\r\n  });\r\n}\r\n\r\n\t/* Google Sheets Api */ \r\nfunction WriteToCsv(spreadsheetId,range,valueInputOption,responseDateTimeRenderOption,values)\r\n{\r\n\tvar values = [\r\n\t  [\r\n\t    values\r\n\t  ],\r\n\t  // Additional rows ...\r\n\t];\r\n\tvar body = {\r\n\t  values: values\r\n\t};\r\n\t\r\n\tvar params = {\r\n\t   spreadsheetId: spreadsheetId,\r\n\t   range: range,\r\n\t   valueInputOption: valueInputOption,\r\n\t   responseDateTimeRenderOption: responseDateTimeRenderOption,\r\n\t   resource: body\r\n\t};\r\n\t\r\n\tvar writeToCsvTimer = setInterval(() => {\r\n\tif (typeof(gapi.client.sheets) != 'undefined') {\r\n\t\tclearInterval(writeToCsvTimer);\r\n\t\tgapi.client.sheets.spreadsheets.values.update(params).then((response) => {\r\n\t\t  var result = response.result;\r\n\t\t  console.log(`${result.updatedCells} cells updated.`);\r\n\t\t});\r\n\t}},100);\r\n}\r\n\r\nfunction ReadCsv(spreadsheetId,range,valueRenderOption,dateTimeRenderOption)\r\n{\r\n\tvar params = {\r\n\t\tspreadsheetId: spreadsheetId,\r\n\t\trange: range,\r\n\t\tvalueRenderOption: valueInputOption,\r\n\t\tdateTimeRenderOption: dateTimeRenderOption\r\n\t};\r\n\r\n\tvar readCsvTimer = setInterval(() => {\r\n\tif (typeof(gapi.client.sheets) != 'undefined') {\r\n\t\tgapi.client.sheets.spreadsheets.values.get(params).then((response) => {\r\n        // TODO: Change code below to process the `response` object:\r\n        console.log(response.result);\r\n    \t}, function(reason) {\r\n        \tconsole.error('error: ' + reason.result.error.message);\r\n    \t});\r\n\t}},100);\r\n}\r\n\r\nfunction initClient(apiKey,clientId,scope,callback) {\r\n      var API_KEY = typeof(apiKey) != \"undefined\" ? apiKey : GOOGLE_SHEETS_API_KEY;  // TODO: Update placeholder with desired API key.\r\n\r\n      var CLIENT_ID = typeof(clientId) != \"undefined\" ? clientId : '659142072690-co0fa66mn7mfsrba0msser9djfu9bfjb.apps.googleusercontent.com';  // TODO: Update placeholder with desired client ID.\r\n\r\n      // TODO: Authorize using one of the following scopes:\r\n      //   'https://www.googleapis.com/auth/drive'\r\n      //   'https://www.googleapis.com/auth/drive.file'\r\n      //   'https://www.googleapis.com/auth/spreadsheets'\r\n      var SCOPE = typeof(scope) != \"undefined\" != \"\" ? scope : \"https://www.googleapis.com/auth/spreadsheets  https://www.googleapis.com/auth/gmail.readonly\";\r\n\r\n      gapi.client.init({\r\n        'apiKey': API_KEY,\r\n        'clientId': CLIENT_ID,\r\n        'scope': SCOPE,\r\n        'discoveryDocs': ['https://sheets.googleapis.com/$discovery/rest?version=v4','https://gmail.googleapis.com/$discovery/rest?version=v1'],\r\n      })\r\n      .then(function(client) {\r\n        typeof(callback) != \"undefined\" ? callback(client) : googleSheetUpdateSignInStatus();\r\n      });\r\n}\r\n\r\n\r\nfunction googleSheetUpdateSignInStatus()\r\n {\r\n \tgapi.auth2.getAuthInstance().isSignedIn.listen(updateSignInStatus);\r\n    updateSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\r\n }\r\n\r\nfunction handleGapiLoad(authAsked,callback) {\r\n  gapi.load(authAsked, callback);\r\n}\r\n\r\nfunction handleClientLoad() {\r\n  gapi.client.load('compute', CLOUD_COMPUTE_API_VERSION);;\r\n}\r\n\r\nfunction updateSignInStatus(isSignedIn) {\r\n  if (isSignedIn) {\r\n  \t\r\n  }\r\n}\r\n\r\nfunction hasSignIn()\r\n{\r\n\treturn gapi.auth2.getAuthInstance().isSignedIn.get();\r\n}\r\n\r\nfunction handleSignInClick(event) {\r\n  gapi.auth2.getAuthInstance().signIn();\r\n}\r\n\r\nfunction handleSignOutClick(event) {\r\n  gapi.auth2.getAuthInstance().signOut();\r\n}\r\n","libs":["smtp","moment-min","GoogleApi"],"name":"@Utils","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}}]}